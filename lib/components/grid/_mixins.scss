@import '../../design-patterns/layout/mixins';
@import '../../design-patterns/spacing/vars';

@mixin grid-gutter($horizontal-gutter) {
  $vertical-gutter: $container-margin-sm;

  margin: $vertical-gutter 0 (-$vertical-gutter) (-$horizontal-gutter);

  > .ax-grid__cell {
    padding: 0 0 $vertical-gutter $horizontal-gutter;
  }

  &[class^='grid-full'],
  &[class*=' grid-full'] {
    > .ax-grid__cell {
      padding-bottom: $vertical-gutter;
    }
  }

  @include screen-less-than(breakpoint-prop(width, breakpoint-first())) {
    &:not(.ax-grid--gutters-none),
    &:not(.ax-grid--gutters-none-v) {
      > .grid-cell {
        padding-bottom: $vertical-gutter;
      }
    }
  }
}

@mixin make-responsive-grid($responsive) {
  $breakpoint-id: false;
  $breakpoint-width: false;
  $size-class: '';

  @if ($responsive == true) {
    $breakpoint-id: breakpoint-prop(id);
    $breakpoint-width: breakpoint-prop(width);
    $size-class: '--#{$breakpoint-id}';
  }

  @include grid-breakpoint($breakpoint-width) {
    .ax-grid {
      > .ax-grid__cell--fill#{$size-class}    { flex: 1 1 auto; }
      > .ax-grid__cell--fit#{$size-class}     { flex: 1 1 0%; }
      > .ax-grid__cell--full#{$size-class}    { flex: 0 0 100%; }
      > .ax-grid__cell--shrink#{$size-class}  { flex: 0 1 auto; }
      > .ax-grid__cell--percent#{$size-class} { flex: none; }

      &.ax-grid--fill#{$size-class} > .ax-grid__cell   { flex: 1 1 auto; }
      &.ax-grid--fit#{$size-class} > .ax-grid__cell    { flex: 1 1 0%; }
      &.ax-grid--full#{$size-class} > .ax-grid__cell   { flex: 0 0 100%; }
      &.ax-grid--shrink#{$size-class} > .ax-grid__cell { flex: 0 1 auto; }
    }
  }
}

/// Simple mixin to breakpoint for anything
/// below the highest breakpoint.
@mixin grid-breakpoint($width) {
  @if ($width == false) {
    @content;
  } @else {
    @include screen-more-than($width) {
      @content;
    }
  }
}
